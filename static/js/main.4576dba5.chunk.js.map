{"version":3,"sources":["store/fetchGogoroAPI.js","config/configureStore.js","config/reducers.js","components/field/index.js","components/field/Text.js","components/field/Dropdown.js","components/field/Select.js","components/field/Phone.js","components/auth/Register.js","router/auth/Register.js","components/auth/VerifyEmail.js","components/auth/ConfirmNewPassword.js","router/auth/Verify.js","components/auth/ResetPassword.js","router/auth/ResetPassword.js","routes/auth.js","components/user/Profile.js","router/user/Profile.js","components/sign/Login.js","router/sign/Login.js","components/gogoro/data.js","components/gogoro/List.js","components/gogoro/Map.js","router/gogoro/Map.js","routes/page.js","components/layout/Nav.js","app.js","serviceWorker.js","index.js"],"names":["fetchGogoroAPISuccess","data","type","payload","gogoroReducer","state","arguments","length","undefined","action","Object","toConsumableArray","concat","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","database","root","history","persistConfig","key","storage","whitelist","createBrowserHistory","basename","process","middleware","routerMiddleware","thunk","rootReducer","combineReducers","router","connectRouter","firebaseReducer","firestoreReducer","gogoro","persistReducer","console","log","composeEnhancer","compose","apply","applyMiddleware","store","createStore","persistor","persistStore","reduxfirebaseProps","config","userProfile","useFirestoreForProfile","useFirestoreForStorageMeta","fileMetadataFactory","uploadRes","metadata","downloadURL","_uploadRes$metadata","name","fullPath","dispatch","firebaseStateName","createFirestoreInstance","Field","Text","_ref","field","_ref$form","form","isSubmitting","touched","errors","props","objectWithoutProperties","react_default","a","createElement","Input","assign","disabled","error","placeholder","Dropdown","setFieldValue","onChange","e","_ref2","value","fluid","multiple","search","selection","options","Select","text","Phone","react_phone_number_input","country","setPhone","enhancer","withFirebase","withHandlers","emailRegister","creds","createUser","email","password","then","res","toast","success","position","POSITION","TOP_CENTER","auth","currentUser","sendEmailVerification","err","catch","withFormik","mapPropsToValues","confirm_password","validationSchema","yup","shape","required","min","oneOf","handleSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","displayName","Form","Header","as","content","Divider","formik_esm","component","Button","PageAuthRegister","useEffect","document","title","Container","style","marginTop","Segment","Register","VerifyEmailSuccess","Message","positive","VerifyEmailFail","negative","withState","checkVerify","actionCode","setValidCode","setVerifiedCode","applyActionCode","validCode","verifiedCode","className","Loader","active","inline","size","confirmPassword","confirmPasswordReset","resetForm","Group","widths","PageAuthVerifyAction","query","queryString","parse","location","mode","oobCode","ConfirmNewPassword","auth_VerifyEmail","resetPassword","PageAuthResetPassword","auth_ResetPassword","AdminPages","react_router","exact","path","UserProfile","isVerify","signInPhone","message","setVerifyCode","verifyCode","confirmCode","confirmResult","unlinkPhoneProvider","_useState","useState","_useState2","slicedToArray","phone","Label","color","onClick","id","target","hidden","defaultValues","withFirestore","setMessage","setConfirmResult","appVerifier","RecaptchaVerifier","useDeviceLanguage","signInWithPhoneNumber","credential","PhoneAuthProvider","verificationId","linkAndRetrieveDataWithCredential","user","_ref3","unlink","PROVIDER_ID","objectSpread","initialValue","phoneNumber","_ref4","enableReinitialize","connect","updateProfile","update","uid","_props$auth","emailVerified","Profile","emailLogin","googloLogin","login","provider","Login","horizontal","basic","textAlign","Link","to","icon","towns","city","cityOptions","map","StationList","station","setSearch","_useState3","_useState4","setCity","_useState5","_useState6","townOptions","setTownOption","_useState7","_useState8","town","setTown","useLayoutEffect","i","t","Fragment","Item","filter","item","District","List","Value","City","Address","indexOf","index","array","Image","src","Content","verticalAlign","withProps","googleMapURL","loadingElement","height","containerElement","mapElement","withScriptjs","withGoogleMap","isOpen","setOpen","isInfo","setInfoID","StationMark","isEmpty","s","StationInfo","react_google_maps_lib","lat","Latitude","lng","Longitude","LocName","open","defaultZoom","defaultCenter","MarkerClusterer_default","PageGogoro","isAuthEmpty","fetchGogoroAPI","setStation","styled_flexboxgrid_es","xs","sm","md","lg","List_StationList","Map","defaultProps","axios","get","response","preparation","d","push","Id","ZipCode","State","AvailableTime","AvailableTimeByte","RouterPages","PageSignIn","PageUserProfile","RouterAuth","MenuAuth","userLoginout","Menu","primary","MenuDefault","logout","isAuthed","Nav_MenuDefault","Nav_MenuAuth","App","layout_Nav","react_toastify","page","Boolean","window","hostname","match","Component","ReactDOM","render","es","react_redux_firebase_es","integration_react","loading","esm","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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KAAM,qBACND,MAAO,CACN,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uBAGF,CACCC,KAAM,qBACND,MAAO,CAAC,eAAM,eAAM,uBAErB,CACCC,KAAM,qBACND,MAAO,CACN,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uBAGF,CACCC,KAAM,qBACND,MAAO,CACN,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uBAGF,CACCC,KAAM,qBACND,MAAO,CACN,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uBAGF,CACCC,KAAM,qBACND,MAAO,CACN,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uBAGF,CACCC,KAAM,qBACND,MAAO,CACN,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,wBAGF,CAAEC,KAAM,qBAAOD,MAAO,CAAC,eAAM,kBC3OxBE,GAAcC,eDLE,CACrB,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBCf+B,SAAAF,GAAI,MAAK,CACxCvO,IAAKuO,EACL9J,KAAM8J,EACNrK,MAAOqK,KAEFG,GAAc,SAAAvL,GAAS,IACpBwL,EAAYxL,EAAZwL,QADoBvD,EAEAC,mBAAS,IAFTC,EAAAtM,OAAAuM,GAAA,EAAAvM,CAAAoM,EAAA,GAErB/G,EAFqBiH,EAAA,GAEbsD,EAFatD,EAAA,GAAAuD,EAGJxD,mBAAS,IAHLyD,EAAA9P,OAAAuM,GAAA,EAAAvM,CAAA6P,EAAA,GAGrBN,EAHqBO,EAAA,GAGfC,EAHeD,EAAA,GAAAE,EAIS3D,mBAAS,IAJlB4D,EAAAjQ,OAAAuM,GAAA,EAAAvM,CAAAgQ,EAAA,GAIrBE,EAJqBD,EAAA,GAIRE,EAJQF,EAAA,GAAAG,EAKJ/D,mBAAS,IALLgE,EAAArQ,OAAAuM,GAAA,EAAAvM,CAAAoQ,EAAA,GAKrBE,EALqBD,EAAA,GAKfE,EALeF,EAAA,GAO5BG,0BAAgB,WACf,GAAIjB,EAAM,CACT,IAAIhK,EAAU,GAYd,OAXAkK,eAAIH,GAAO,SAACgB,EAAMG,GACbH,EAAKf,OAASA,IACjBhK,EAAUkK,eAAIa,EAAKhB,MAAO,SAACoB,EAAGD,GAC7B,MAAO,CACNzP,IAAK0P,EACLjL,KAAMiL,EACNxL,MAAOwL,QAKJP,EAAc5K,KAEpB,CAACgK,IAwBJ,OACClL,EAAAC,EAAAC,cAACF,EAAAC,EAAMqM,SAAP,KACCtM,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACC9D,EAAAC,EAAAC,cAAC4D,EAAA,EAAKzE,MAAN,KACCW,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOU,MAAOG,EAAQN,SAAU,SAAAC,GAAC,OAAI4K,EAAU5K,EAAE6H,OAAO3H,WAEzDb,EAAAC,EAAAC,cAAC4D,EAAA,EAAKzE,MAAN,KACCW,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACCN,MAAOqK,EACPxK,SAAU,SAACC,EAADpB,GAAwBA,EAAlBP,KAAkB,IAAZ6B,EAAYtB,EAAZsB,MACrB,OAAO6K,EAAQ7K,IAEhBN,YAAY,2BACZW,QAASiK,MAGXnL,EAAAC,EAAAC,cAAC4D,EAAA,EAAKzE,MAAN,KACCW,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACCN,MAAOoL,EACPvL,SAAU,SAACC,EAADC,GAAwBA,EAAlB5B,KAAkB,IAAZ6B,EAAYD,EAAZC,MACrB,OAAOqL,EAAQrL,IAEhBN,YAAY,2BACZW,QAAS2K,MAIZ7L,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACC7E,EAAAC,EAAAC,cAACqM,GAAA,EAAKnG,MAAN,KApDgBkF,EAAQkB,OAAO,SAAAC,GAChC,OAAIR,EACIQ,EAAKC,SAASC,KAAK,GAAGC,QAAUX,EAC7Bf,EACHuB,EAAKI,KAAKF,KAAK,GAAGC,QAAU1B,GAEoB,IAAhDuB,EAAKK,QAAQH,KAAK,GAAGC,MAAMG,QAAQ/L,KAGrBoK,IAAI,SAACqB,EAAMO,EAAOC,GACxC,OACCjN,EAAAC,EAAAC,cAACqM,GAAA,EAAD,KACCvM,EAAAC,EAAAC,cAACqM,GAAA,EAAKW,MAAN,CAAYlH,KAAK,OAAOmH,IAAI,6DAC5BnN,EAAAC,EAAAC,cAACqM,GAAA,EAAKa,QAAN,CAAcC,cAAc,UAC3BrN,EAAAC,EAAAC,cAACqM,GAAA,EAAKxI,OAAN,CAAaC,GAAG,IAAIC,QAASwI,EAAKK,QAAQH,KAAK,GAAGC,yDCsBzCnL,GAlBE1D,YAEhBuP,YAAU,CAMTC,aACC,gIACDC,eAAgBxN,EAAAC,EAAAC,cAAA,OAAKyE,MAAO,CAAE8I,OAAM,UACpCC,iBAAkB1N,EAAAC,EAAAC,cAAA,OAAKyE,MAAO,CAAE8I,OAAM,WACtCE,WAAY3N,EAAAC,EAAAC,cAAA,OAAKyE,MAAO,CAAE8I,OAAM,YAEjCG,gBACAC,iBAGcpM,CA/DU,SAAA3B,GAAS,IACzBwL,EAAYxL,EAAZwL,QADyBvD,EAEPC,oBAAS,GAFFC,EAAAtM,OAAAuM,GAAA,EAAAvM,CAAAoM,EAAA,GAE1B+F,EAF0B7F,EAAA,GAElB8F,EAFkB9F,EAAA,GAAAuD,EAGLxD,mBAAS,IAHJyD,EAAA9P,OAAAuM,GAAA,EAAAvM,CAAA6P,EAAA,GAG1BwC,EAH0BvC,EAAA,GAGlBwC,EAHkBxC,EAAA,GAU3ByC,GACJC,mBAAQ7C,IACTA,EAAQF,IAAI,SAACgD,EAAGhC,GACf,IAAMiC,EAAcP,GAAUE,IAAW5B,GACxCpM,EAAAC,EAAAC,cAACoO,GAAA,WAAD,CAAYjM,SAAU,CAAEkM,IAAKH,EAAEI,SAAUC,IAAKL,EAAEM,YAC/C1O,EAAAC,EAAAC,cAACF,EAAAC,EAAMqM,SAAP,KACCtM,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAQE,QAASmK,EAAEO,QAAQhC,KAAK,GAAGC,QACnC5M,EAAAC,EAAAC,cAACgE,EAAA,EAAD,MACAlE,EAAAC,EAAAC,cAACyM,GAAA,EAAD,KACC3M,EAAAC,EAAAC,cAACyM,GAAA,EAAKJ,KAAN,KAAY6B,EAAEtB,QAAQH,KAAK,GAAGC,UAKlC,OACC5M,EAAAC,EAAAC,cAACoO,GAAA,OAAD,CAAQ3R,IAAKyP,EAAG/J,SAAU,CAAEkM,IAAKH,EAAEI,SAAUC,IAAKL,EAAEM,WAAapG,QAAS,kBAnBzDsG,GAmB0E,EAlB7FX,EAkBmG7B,QAjBnG2B,EAAQa,GAFU,IAACA,IAoBfP,KAIL,OAAIF,mBAAQ7C,GACJtL,EAAAC,EAAAC,cAAA,iCAGNF,EAAAC,EAAAC,cAACF,EAAAC,EAAMqM,SAAP,KACCtM,EAAAC,EAAAC,cAAA,WAAMyD,KAAKC,UAAU0H,EAAS,KAAM,IACpCtL,EAAAC,EAAAC,cAACoO,GAAA,UAAD,CAAWO,YAAa,EAAGC,cAAe,CAAEP,IAAK,KAAME,IAAK,MAC3DzO,EAAAC,EAAAC,cAAC6O,GAAA9O,EAAD,KAAkBiO,OChCjBc,GAAa,SAAAlP,GAAS,IACnBmP,EAAwCnP,EAAxCmP,YAAavR,EAA2BoC,EAA3BpC,OAAQwR,EAAmBpP,EAAnBoP,eADFnH,EAGGC,mBAAS,IAHZC,EAAAtM,OAAAuM,GAAA,EAAAvM,CAAAoM,EAAA,GAGpBuD,EAHoBrD,EAAA,GAGXkH,EAHWlH,EAAA,GAY3B,OARAkE,0BAAgB,WACf,OAAIgC,mBAAQzQ,IACXE,QAAQC,IAAIH,GACLwR,KAEDC,EAAWzR,IAChB,CAACA,IAEAuR,EACIjP,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAU4D,GAAG,MAGnB/K,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAMtO,OAAK,GACVd,EAAAC,EAAAC,cAACkP,GAAA,EAAD,KACCpP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC9BxP,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACC7E,EAAAC,EAAAC,cAACuP,GAAD,CAAanE,QAASA,MAGxBtL,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7BxP,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACC7E,EAAAC,EAAAC,cAACwP,GAAD,CAAkBpE,QAASA,SAUlC0D,GAAWW,aAAe,CACzBjS,OAAQ,IAGT,IAae+D,GANE1D,YAChBgM,YARuB,SAAAzO,GAAK,MAAK,CACjCoC,OAAQpC,EAAMoC,OACduR,YAAa3T,EAAMQ,SAAS0G,KAAK2L,UAEP,SAAAjP,GAAQ,MAAK,CACvCgQ,eAAgB,kBAAMhQ,EvBrDf,SAAAA,GACN,OAAO0Q,IACLC,IAAI,yCACJ5N,KAAK,SAAA6N,GAEL,IAAMC,EAAc,GAqBpB,OAnBAD,EAAS5U,KAAKkQ,IAAI,SAAC4E,EAAG5D,GACrB,IAAMuC,EAAUhL,KAAK8C,MAAMuJ,EAAErB,SACvB7B,EAAUnJ,KAAK8C,MAAMuJ,EAAElD,SACvBJ,EAAW/I,KAAK8C,MAAMuJ,EAAEtD,UACxBG,EAAOlJ,KAAK8C,MAAMuJ,EAAEnD,MAC1B,OAAOkD,EAAYE,KAAK,CACvBC,GAAIF,EAAEE,GACNvB,QAASA,EACTH,SAAUwB,EAAExB,SACZE,UAAWsB,EAAEtB,UACbyB,QAASH,EAAEG,QACXrD,QAASA,EACTJ,SAAUA,EACV0D,MAAO,EACPvD,KAAMA,EACNwD,cAAeL,EAAEK,cACjBC,kBAAmBN,EAAEM,sBAGhBpR,EAASjE,EAAsB8U,MAEtCnN,MAAM,SAAStC,GAGf,OADA1C,QAAQC,IAAIyC,GACLA,UuB8BImB,CAASuN,IC7CTuB,GAXK,WACnB,OACCvQ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACCnH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIjD,UAAWoM,KACjCxQ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAOE,KAAK,gBAAgBjD,UAAWqM,KACvCzQ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAOE,KAAK,QAAQjD,UAAWsM,KAC/B1Q,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAOE,KAAK,UAAUjD,UAAW4K,iBCR9B2B,GAAW,SAAA7Q,GAAS,IAEhBiC,EAELjC,EAFH0C,KAAQT,MACR6O,EACG9Q,EADH8Q,aAED,OACC5Q,EAAAC,EAAAC,cAACF,EAAAC,EAAMqM,SAAP,KACCtM,EAAAC,EAAAC,cAAC2Q,GAAA,EAAKtE,KAAN,KACCvM,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQyM,SAAO,EAAC9M,GAAI8G,KAAMC,GAAG,UAAU9G,QAAQ,wCAAe+B,KAAK,SAIpEhG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUiM,MAAI,EAACrL,KAAMW,GACpB/B,EAAAC,EAAAC,cAACM,EAAA,EAASqQ,KAAV,KACC7Q,EAAAC,EAAAC,cAACM,EAAA,EAAS+L,KAAV,CAAevI,GAAI8G,KAAMC,GAAG,iBAA5B,4BACA/K,EAAAC,EAAAC,cAACM,EAAA,EAAS+L,KAAV,CAAejE,QAASsI,GAAxB,oBAMCG,GAAc,SAAAjR,GACnB,OACCE,EAAAC,EAAAC,cAACF,EAAAC,EAAMqM,SAAP,KACCtM,EAAAC,EAAAC,cAAC2Q,GAAA,EAAKtE,KAAN,KACCvM,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQyM,SAAO,EAAC9M,GAAI8G,KAAMC,GAAG,iBAAiB9G,QAAQ,eAAK+B,KAAK,OAAhE,iBAKDhG,EAAAC,EAAAC,cAAC2Q,GAAA,EAAKtE,KAAN,KACCvM,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQL,GAAI8G,KAAMC,GAAG,IAAI/E,KAAK,MAAM/B,QAAQ,oBA8BjCxC,GATE1D,YAChB2D,eACAC,YAAa,CACZiP,aAAc,SAAArR,GAAA,IAAGzD,EAAHyD,EAAGzD,SAAH,OAAkB,WAC/BA,EAASkV,aAGXjH,YAXuB,SAAAzO,GAAK,MAAK,CACjCkH,KAAMlH,EAAMQ,SAAS0G,QAYPf,CAzBH,SAAA3B,GAAS,IACZ0C,EAAuB1C,EAAvB0C,KAAMoO,EAAiB9Q,EAAjB8Q,aACRK,EAAW9C,kBAAQ3L,GAAQxC,EAAAC,EAAAC,cAACgR,GAAD,MAAkBlR,EAAAC,EAAAC,cAACiR,GAAD,CAAU3O,KAAMA,EAAMoO,aAAcA,IAEvF,OACC5Q,EAAAC,EAAAC,cAAC2Q,GAAA,EAAD,CAAM7K,KAAK,QAEVhG,EAAAC,EAAAC,cAAC2Q,GAAA,EAAKA,KAAN,CAAWxO,SAAS,SAAS4O,MCnCjBG,GARH,kBACXpR,EAAAC,EAAAC,cAACF,EAAAC,EAAMqM,SAAP,KACCtM,EAAAC,EAAAC,cAACmR,GAAD,MACArR,EAAAC,EAAAC,cAACoR,EAAA,EAAD,MACAtR,EAAAC,EAAAC,cAACqR,GAAD,QCAkBC,QACW,cAA7BC,OAAO/K,SAASgL,UAEe,UAA7BD,OAAO/K,SAASgL,UAEhBD,OAAO/K,SAASgL,SAASC,MACvB,+DCLSC,gBAeRR,GAdCS,IAASC,OACf9R,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CAAU7T,MAAOA,GAChB8B,EAAAC,EAAAC,cAAC8R,EAAA,2BAA+B1T,EAC/B0B,EAAAC,EAAAC,cAAC+R,GAAA,EAAD,CAAaC,QAAS,KAAM9T,UAAWA,GACtC4B,EAAAC,EAAAC,cAACiS,EAAA,EAAD,CAAiB1V,QAASA,GACzBuD,EAAAC,EAAAC,cAAC0R,GAAD,UAKJpN,SAAS4N,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtQ,KAAK,SAAAuQ,GACjCA,EAAaC","file":"static/js/main.4576dba5.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst FETCH_GOGORO_API = 'FETCH_GOGORO_API'\nconst FETCH_GOGORO_API_SUCCESS = 'FETCH_GOGORO_API_SUCCESS'\nconst fetchGogoroAPI = payload => {\n\treturn dispatch => {\n\t\treturn axios\n\t\t\t.get('https://webapi.gogoro.com/api/vm/list')\n\t\t\t.then(response => {\n\t\t\t\t// handle success\n\t\t\t\tconst preparation = []\n\t\t\t\t// 資料格式預處理\n\t\t\t\tresponse.data.map((d, i) => {\n\t\t\t\t\tconst LocName = JSON.parse(d.LocName)\n\t\t\t\t\tconst Address = JSON.parse(d.Address)\n\t\t\t\t\tconst District = JSON.parse(d.District)\n\t\t\t\t\tconst City = JSON.parse(d.City)\n\t\t\t\t\treturn preparation.push({\n\t\t\t\t\t\tId: d.Id,\n\t\t\t\t\t\tLocName: LocName,\n\t\t\t\t\t\tLatitude: d.Latitude,\n\t\t\t\t\t\tLongitude: d.Longitude,\n\t\t\t\t\t\tZipCode: d.ZipCode,\n\t\t\t\t\t\tAddress: Address,\n\t\t\t\t\t\tDistrict: District,\n\t\t\t\t\t\tState: 1,\n\t\t\t\t\t\tCity: City,\n\t\t\t\t\t\tAvailableTime: d.AvailableTime,\n\t\t\t\t\t\tAvailableTimeByte: d.AvailableTimeByte\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\treturn dispatch(fetchGogoroAPISuccess(preparation))\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\t// handle error\n\t\t\t\tconsole.log(error)\n\t\t\t\treturn error\n\t\t\t})\n\t}\n}\n\nexport const fetchGogoroAPISuccess = data => {\n\treturn {\n\t\ttype: FETCH_GOGORO_API_SUCCESS,\n\t\tpayload: data\n\t}\n}\nconst gogoroReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_GOGORO_API:\n\t\t\treturn [...action.payload]\n\n\t\tcase FETCH_GOGORO_API_SUCCESS:\n\t\t\treturn [...state, ...action.payload]\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport { fetchGogoroAPI, gogoroReducer }\n","import { compose, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\n\n// import { BehaviorSubject } from 'rxjs'\n// import { switchMap } from 'rxjs/operators'\n// import { createEpicMiddleware } from 'redux-observable'\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\n\nimport { createFirestoreInstance } from 'redux-firestore' // <- needed if using firestore\n\nimport firebase from 'firebase'\nimport 'firebase/auth'\nimport 'firebase/firestore' // <- needed if using firestore\nimport 'firebase/functions' // <- needed if using httpsCallable\n\nimport reducer from './reducers'\n\n/**\n * react-redux-firebase\n */\n\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyAkdvJpmaNSRVqu35dqpgqcEHVso3OilEc',\n\tauthDomain: 'auth-e36aa.firebaseapp.com',\n\tdatabaseURL: 'https://auth-e36aa.firebaseio.com',\n\tprojectId: 'auth-e36aa',\n\tstorageBucket: 'auth-e36aa.appspot.com',\n\tmessagingSenderId: '289566316538'\n}\n\nfirebase.initializeApp(firebaseConfig)\nfirebase.firestore()\n\nexport const firedatabase = firebase.database()\n/**\n * redux-persist\n */\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n\twhitelist: ['gogoro']\n}\n\nconst persistedReducer = root => persistReducer(persistConfig, root)\n\n/**\n * config\n */\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL })\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [routerMiddleware(history), thunk]\n\nconst rootReducer = persistedReducer(reducer(history))\n\nif (process.env.NODE_ENV === 'development') {\n\tconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n\t// middleware.push(createLogger())\n\tif (typeof devToolsExtension === 'function') {\n\t\tenhancers.push(devToolsExtension())\n\t}\n\tif (module.hot) {\n\t\tmodule.hot.accept('./reducers', () => {\n\t\t\tstore.replaceReducer(reducer(history))\n\t\t})\n\t}\n} else if (process.env.NODE_ENV === 'production') {\n\tconsole.log(process.env.NODE_ENV)\n}\n\nconst composeEnhancer = compose(\n\tapplyMiddleware(...middleware),\n\t...enhancers\n)\n\nexport const store = createStore(rootReducer, initialState, composeEnhancer)\nexport const persistor = persistStore(store)\n\nexport const reduxfirebaseProps = {\n\tfirebase,\n\tconfig: {\n\t\tuserProfile: 'users',\n\t\tuseFirestoreForProfile: true,\n\t\tuseFirestoreForStorageMeta: true,\n\t\tfileMetadataFactory: (uploadRes, firebase, metadata, downloadURL) => {\n\t\t\t// upload response from Firebase's storage upload\n\t\t\tconst {\n\t\t\t\tmetadata: { name, fullPath }\n\t\t\t} = uploadRes\n\t\t\t// default factory includes name, fullPath, downloadURL\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tfullPath,\n\t\t\t\tdownloadURL\n\t\t\t}\n\t\t}\n\t},\n\tdispatch: store.dispatch,\n\tfirebaseStateName: 'firebase',\n\tcreateFirestoreInstance // <- needed if using firestore\n}\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore' // <- needed if using firestore\nimport { gogoroReducer } from '../store/fetchGogoroAPI'\n\nexport default history =>\n\tcombineReducers({\n\t\trouter: connectRouter(history),\n\t\tfirebase: firebaseReducer,\n\t\tfirestore: firestoreReducer,\n\t\tgogoro: gogoroReducer\n\t})\n","import { FieldText } from './Text'\nimport { FieldDropdown } from './Dropdown'\nimport { FieldSelect } from './Select'\nimport { FieldPhone } from './Phone'\n\nexport const Field = {\n\tText: FieldText,\n\tDropdown: FieldDropdown,\n\tSelect: FieldSelect,\n\tPhone: FieldPhone\n}\n","import React from 'react'\nimport { Input } from 'semantic-ui-react'\n\nexport const FieldText = ({ field, form: { isSubmitting, touched, errors }, ...props }) => {\n\treturn (\n\t\t<Input\n\t\t\t{...field}\n\t\t\tdisabled={isSubmitting}\n\t\t\ttype={props.type}\n\t\t\terror={touched[field.name] && errors[field.name]}\n\t\t\tplaceholder={props.placeholder}\n\t\t/>\n\t)\n}\n","import React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\n// options = [\n//     {\n//       \"key\": \"Lexus Hettinger\",\n//       \"text\": \"Lexus Hettinger\",\n//       \"value\": \"lexus_hettinger\"\n//     },\n//   ]\n\nexport const FieldDropdown = ({\n\tfield, // { name, value, onChange, onBlur }\n\tform: { touched, errors, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n\t...props\n}) => (\n\t<Dropdown\n\t\t{...field}\n\t\t{...props}\n\t\terror={touched[field.name] && errors[field.name]}\n\t\tplaceholder={touched[field.name] && errors[field.name]}\n\t\tonChange={(e, { name, value }) => setFieldValue(name, value)}\n\t\tfluid\n\t\tmultiple={false || props.multiple}\n\t\tsearch={false || props.search}\n\t\tselection\n\t\toptions={props.options}\n\t/>\n)\n","import React from 'react'\nimport { Select } from 'semantic-ui-react'\n\nexport const FieldSelect = ({\n\tfield, // { name, value, onChange, onBlur }\n\tform: { touched, errors, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n\t...props\n}) => {\n\tconst status = [\n\t\t{ key: 0, text: '未上架', value: 0 },\n\t\t{ key: 1, text: '已上架', value: 1 },\n\t\t{ key: 2, text: '特價中', value: 2 }\n\t]\n\treturn (\n\t\t<Select\n\t\t\t{...field}\n\t\t\t{...props}\n\t\t\terror={touched[field.name] && errors[field.name]}\n\t\t\tplaceholder={touched[field.name] && errors[field.name]}\n\t\t\tonChange={(e, { name, value }) => setFieldValue(name, value)}\n\t\t\toptions={status}\n\t\t/>\n\t)\n}\n","import React from 'react'\n\nimport PhoneInput from 'react-phone-number-input'\nimport 'react-phone-number-input/style.css'\nexport const FieldPhone = ({\n\tfield, // { name, value, onChange, onBlur }\n\tform: { touched, errors, setFieldValue, isSubmitting }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n\t...props\n}) => {\n\treturn (\n\t\t<PhoneInput\n\t\t\tcountry=\"TW\"\n\t\t\t{...field}\n\t\t\tdisabled={isSubmitting}\n\t\t\tonChange={value => {\n\t\t\t\tprops.setPhone(value)\n\t\t\t\tsetFieldValue(field.name, value)\n\t\t\t}}\n\t\t\terror={touched[field.name] && errors[field.name]}\n\t\t\tplaceholder={props.placeholder}\n\t\t/>\n\t)\n}\n","import React from 'react'\nimport { Form, Button, Header, Divider } from 'semantic-ui-react'\nimport { Form as Formik, withFormik, Field, ErrorMessage } from 'formik'\nimport { compose, withHandlers } from 'recompose'\n\nimport { Field as Input } from '../field'\nimport * as yup from 'yup'\nimport { withFirebase } from 'react-redux-firebase'\nimport { toast } from 'react-toastify'\n\nconst AuthRegister = props => {\n\treturn (\n\t\t<Form>\n\t\t\t<Header as=\"h1\" content=\"註冊表單\" />\n\t\t\t<Divider />\n\t\t\t<Formik>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>帳號：</label>\n\t\t\t\t\t<Field name=\"email\" type=\"email\" placeholder=\"帳號(信箱)\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"email\" />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>密碼：</label>\n\t\t\t\t\t<Field name=\"password\" type=\"password\" placeholder=\"密碼\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"password\" />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>再一次輸入密碼：</label>\n\t\t\t\t\t<Field name=\"confirm_password\" type=\"password\" placeholder=\"密碼\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"confirm_password\" />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Button type=\"submit\" fluid content=\"登入\" />\n\t\t\t</Formik>\n\t\t</Form>\n\t)\n}\n\nconst enhancer = compose(\n\twithFirebase,\n\twithHandlers({\n\t\temailRegister: ({ firebase }) => creds => {\n\t\t\tfirebase\n\t\t\t\t.createUser({ email: creds.email, password: creds.password })\n\t\t\t\t.then(res => {\n\t\t\t\t\ttoast.success('註冊成功!', {\n\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.auth()\n\t\t\t\t\t\t.currentUser.sendEmailVerification()\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tres => {\n\t\t\t\t\t\t\t\ttoast.success(`送出驗證信`, {\n\t\t\t\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\ttoast.error(`送出驗證信失敗，${err}`, {\n\t\t\t\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\ttoast.error(`\"註冊錯誤! ${err}\"`, {\n\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}),\n\twithFormik({\n\t\tmapPropsToValues: () => ({ email: '', password: '', confirm_password: '' }),\n\n\t\t// Custom sync validation\n\n\t\tvalidationSchema: () =>\n\t\t\tyup.object().shape({\n\t\t\t\temail: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.email('不符合信箱格式')\n\t\t\t\t\t.required('必填'),\n\t\t\t\tpassword: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.required('必填')\n\t\t\t\t\t.min(6, '不可小於6個字'),\n\t\t\t\tconfirm_password: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.required('必填')\n\t\t\t\t\t.min(6, '不可小於6個字')\n\t\t\t\t\t.oneOf([yup.ref('password')], '密碼不相同')\n\t\t\t}),\n\t\thandleSubmit: (values, { setSubmitting, props: { emailRegister } }) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\talert(JSON.stringify(values, null, 2))\n\t\t\t\temailRegister(values)\n\t\t\t\tsetSubmitting(false)\n\t\t\t}, 1000)\n\t\t},\n\n\t\tdisplayName: 'AuthRegister'\n\t})\n)\n\nexport default enhancer(AuthRegister)\n","import React, { useEffect } from 'react'\n\nimport { Container, Segment } from 'semantic-ui-react'\n\nimport AuthRegister from 'components/auth/Register'\n\nconst PageAuthRegister = props => {\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdocument.title = '登入'\n\t\t}\n\t}, [])\n\treturn (\n\t\t<Container style={{ marginTop: '20vh' }}>\n\t\t\t<Segment>\n\t\t\t\t<AuthRegister />\n\t\t\t</Segment>\n\t\t</Container>\n\t)\n}\n\nexport default PageAuthRegister\n","import React from 'react'\n// import { Link } from 'react-router-dom'\nimport { compose, withHandlers, withState } from 'recompose'\nimport { withFirebase } from 'react-redux-firebase'\n\nimport { Loader, Message } from 'semantic-ui-react'\n\nconst VerifyEmailSuccess = () => {\n\treturn (\n\t\t<Message positive>\n\t\t\t<Message.Header>信箱驗證成功</Message.Header>\n\t\t\t<p>點擊跳轉...</p>\n\t\t</Message>\n\t)\n}\n\nconst VerifyEmailFail = () => {\n\treturn (\n\t\t<Message negative>\n\t\t\t<Message.Header>信箱驗證失敗</Message.Header>\n\t\t\t<p>點擊返回會員資料...</p>\n\t\t</Message>\n\t)\n}\n\nconst VerifyEmail = ({ validCode, verifiedCode }) => {\n\tlet component\n\tif (!verifiedCode) {\n\t\tcomponent = (\n\t\t\t// loading 頁面\n\t\t\t<div className=\"auth-container\" style={{ position: 'relative' }}>\n\t\t\t\t<div className=\"reset-loading\">\n\t\t\t\t\t<Loader active inline=\"centered\" size=\"massive\">\n\t\t\t\t\t\tLoading\n\t\t\t\t\t</Loader>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (verifiedCode && validCode) {\n\t\tcomponent = VerifyEmailSuccess\n\t} else if (verifiedCode && !validCode) {\n\t\tcomponent = VerifyEmailFail\n\t}\n\n\treturn component\n}\n\nconst enhancer = compose(\n\twithFirebase,\n\twithState('validCode', 'setValidCode', null),\n\twithState('verifiedCode', 'setVerifiedCode', false),\n\twithHandlers({\n\t\tcheckVerify: ({ firebase, actionCode, setValidCode, setVerifiedCode }) => () => {\n\t\t\tfirebase\n\t\t\t\t.auth()\n\t\t\t\t.applyActionCode(actionCode)\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetValidCode(true)\n\t\t\t\t\tsetVerifiedCode(true)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tsetValidCode(false)\n\t\t\t\t\tsetVerifiedCode(true)\n\t\t\t\t})\n\t\t}\n\t})\n)\n\nexport default enhancer(VerifyEmail)\n","import React from 'react'\nimport { Form, Button, Header, Divider } from 'semantic-ui-react'\nimport { Form as Formik, Field, withFormik } from 'formik'\nimport { Field as Input } from 'components/field'\nimport * as yup from 'yup'\nimport { compose, withHandlers } from 'recompose'\nimport { withFirebase } from 'react-redux-firebase'\nimport { toast } from 'react-toastify'\n\nconst ResetPassword = props => {\n\treturn (\n\t\t<Form>\n\t\t\t<Header content=\"忘記密碼\" />\n\t\t\t<Divider />\n\t\t\t<Formik>\n\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>請輸入新密碼</label>\n\t\t\t\t\t\t<Field name=\"password\" type=\"password\" component={Input.Text} />\n\t\t\t\t\t</Form.Field>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>請重新輸入新密碼</label>\n\t\t\t\t\t\t<Field name=\"confirm_password\" type=\"password\" component={Input.Text} />{' '}\n\t\t\t\t\t</Form.Field>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button fluid type=\"submit\" content=\"確認變更\" />\n\t\t\t</Formik>\n\t\t</Form>\n\t)\n}\n\nconst enhancer = compose(\n\twithFirebase,\n\twithHandlers({\n\t\tconfirmPassword: ({ firebase, actionCode }) => values =>\n\t\t\tfirebase.confirmPasswordReset(actionCode, values.password).then(\n\t\t\t\t() => {\n\t\t\t\t\t// Password reset has been confirmed and new password updated.\n\n\t\t\t\t\ttoast.success(`更新成功`, {\n\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\ttoast.error(`更新失敗,${err}`, {\n\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t)\n\t}),\n\twithFormik({\n\t\tmapPropsToValues: () => ({ password: '', confirm_password: '' }),\n\t\t// Custom sync validation\n\t\tvalidationSchema: () =>\n\t\t\tyup.object().shape({\n\t\t\t\tpassword: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.required('必填')\n\t\t\t\t\t.min(6, '不可小於6個字'),\n\t\t\t\tconfirm_password: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.required('必填')\n\t\t\t\t\t.min(6, '不可小於6個字')\n\t\t\t\t\t.oneOf([yup.ref('password')], '密碼不相同')\n\t\t\t}),\n\t\thandleSubmit: (values, { setSubmitting, resetForm, props: { confirmPassword } }) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// alert(JSON.stringify(values, null, 2))\n\t\t\t\tconfirmPassword(values)\n\t\t\t\tsetSubmitting(false)\n\t\t\t\tresetForm()\n\t\t\t}, 1000)\n\t\t},\n\n\t\tdisplayName: 'RestPassword'\n\t})\n)\n\nexport default enhancer(ResetPassword)\n","import React from 'react'\nimport queryString from 'query-string'\n\nimport VerifyEmail from 'components/auth/VerifyEmail'\nimport ConfirmNewPassword from 'components/auth/ConfirmNewPassword'\nimport { Container, Segment } from 'semantic-ui-react';\n\n// http://localhost:3000/action?mode=resetPassword&oobCode=ABC123&apiKey=AIzaSy\n\n// mode - The user management action to be completed\n// oobCode - A one-time code, used to identify and verify a request\n// apiKey - Your Firebase project's API key, provided for convenience\n\nconst PageAuthVerifyAction = props => {\n\tconst query = queryString.parse(props.location.search)\n\t// Get the action to complete.\n\tconst mode = query.mode\n\n\t// Get the one-time code from the query parameter.\n\tconst actionCode = query.oobCode\n\n\t// (Optional) Get the API key from the query parameter.\n\t// const apiKey = props.location.query.apiKey;\n\n\t// Handle the user management action.\n\tswitch (mode) {\n\t\t// case 'recoverEmail':\n\t\t// \t// Display reset password handler and UI.\n\t\t// \treturn <RecoverEmail actionCode={actionCode} />\n\t\tcase 'resetPassword':\n\t\t\t// Display email recovery handler and UI.\n\t\t\treturn (\n\t\t\t\t<Container style={{ marginTop: '20vh' }}>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<ConfirmNewPassword actionCode={actionCode} />\n\t\t\t\t\t</Segment>\n\t\t\t\t</Container>\n\t\t\t)\n\t\tcase 'verifyEmail':\n\t\t\t// Display email verification handler and UI.\n\t\t\treturn (\n\t\t\t\t<Container style={{ marginTop: '20vh' }}>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<VerifyEmail actionCode={actionCode} />\n\t\t\t\t\t</Segment>\n\t\t\t\t</Container>\n\t\t\t)\n\t\tdefault:\n\t\t\t// Error: invalid mode.\n\t\t\treturn (\n\t\t\t\t<Container style={{ marginTop: '20vh' }}>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<div className=\"Action\">\n\t\t\t\t\t\t\t<h1>Error 錯誤</h1>\n\t\t\t\t\t\t\t<p>無效網址</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Segment>\n\t\t\t\t</Container>\n\t\t\t)\n\t}\n}\n\nexport default PageAuthVerifyAction\n","import React from 'react'\nimport { Form, Button, Header, Divider } from 'semantic-ui-react'\nimport { Form as Formik, withFormik, Field, ErrorMessage } from 'formik'\nimport { compose, withHandlers } from 'recompose'\n\nimport { Field as Input } from '../field'\nimport * as yup from 'yup'\nimport { withFirebase } from 'react-redux-firebase'\nimport { toast } from 'react-toastify'\n\nconst ResetPassword = props => {\n\treturn (\n\t\t<Form>\n\t\t\t<Header as=\"h1\" content=\"忘記密碼\" />\n\t\t\t<Divider />\n\t\t\t<Formik>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>輸入信箱：</label>\n\t\t\t\t\t<Field name=\"email\" type=\"email\" placeholder=\"帳號(信箱)\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"email\" />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Button type=\"submit\" fluid content=\"登入\" />\n\t\t\t</Formik>\n\t\t</Form>\n\t)\n}\n\nconst enhancer = compose(\n\twithFirebase,\n\twithHandlers({\n\t\tresetPassword: ({ firebase }) => values => {\n\t\t\tfirebase.resetPassword(values.email).then(\n\t\t\t\tres => {\n\t\t\t\t\ttoast.success(`送出驗證信`, {\n\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\ttoast.error(`送出驗證信失敗，${err}`, {\n\t\t\t\t\t\tposition: toast.POSITION.TOP_CENTER\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}),\n\twithFormik({\n\t\tmapPropsToValues: () => ({ email: '' }),\n\n\t\t// Custom sync validation\n\n\t\tvalidationSchema: () =>\n\t\t\tyup.object().shape({\n\t\t\t\temail: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.email('不符合信箱格式')\n\t\t\t\t\t.required('必填')\n\t\t\t}),\n\t\thandleSubmit: (values, { setSubmitting, props: { resetPassword } }) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// alert(JSON.stringify(values, null, 2))\n\t\t\t\tresetPassword(values)\n\t\t\t\tsetSubmitting(false)\n\t\t\t}, 1000)\n\t\t},\n\n\t\tdisplayName: 'AuthRetsetPassword'\n\t})\n)\n\nexport default enhancer(ResetPassword)\n","import React, { useEffect } from 'react'\n\nimport { Container, Segment } from 'semantic-ui-react'\n\nimport ResetPassword from 'components/auth/ResetPassword'\n\nconst PageAuthResetPassword = props => {\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdocument.title = '登入'\n\t\t}\n\t}, [])\n\treturn (\n\t\t<Container style={{ marginTop: '20vh' }}>\n\t\t\t<Segment>\n\t\t\t\t<ResetPassword />\n\t\t\t</Segment>\n\t\t</Container>\n\t)\n}\n\nexport default PageAuthResetPassword\n","import React from 'react'\nimport { Switch, Route } from 'react-router'\n\nimport PageAuthRegister from 'router/auth/Register'\nimport PageAuthVerifyAction from 'router/auth/Verify'\nimport PageAuthResetPassword from 'router/auth/ResetPassword'\n\nconst AdminPages = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/auth/register\" component={PageAuthRegister} />\n\t\t\t<Route path=\"/auth/reset\" component={PageAuthResetPassword} />\n\t\t\t<Route path=\"/auth/verify\" component={PageAuthVerifyAction} />\n\t\t</Switch>\n\t)\n}\n\nexport default AdminPages\n","import React, { useState } from 'react'\nimport { Form, Button, Header, Divider, Label, Message } from 'semantic-ui-react'\nimport { Form as Formik, withFormik, Field, ErrorMessage } from 'formik'\nimport { compose, withHandlers, withState } from 'recompose'\n\nimport { Field as Input } from '../field'\nimport * as yup from 'yup'\nimport { withFirebase, withFirestore } from 'react-redux-firebase'\n\nconst UserProfile = props => {\n\tconst {\n\t\tisVerify,\n\t\tsignInPhone,\n\t\tmessage,\n\t\tsetVerifyCode,\n\t\tverifyCode,\n\t\tconfirmCode,\n\t\tconfirmResult,\n\t\tfirebase,\n\t\tunlinkPhoneProvider\n\t} = props\n\tconst [phone, setPhone] = useState('')\n\tconsole.log(firebase.auth().currentUser)\n\treturn (\n\t\t<Form>\n\t\t\t<Header as=\"h1\" content=\"使用者資料\" />\n\t\t\t<Divider />\n\t\t\t<Formik>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>使用者名稱：</label>\n\t\t\t\t\t<Field name=\"displayName\" type=\"text\" placeholder=\"名稱\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"displayName\" />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t信箱： <Label color={isVerify ? 'green' : 'red'} content={isVerify ? '已驗證' : '未驗證'} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<Field name=\"email\" type=\"email\" placeholder=\"帳號(信箱)\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"email\" />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>手機號碼</label>\n\t\t\t\t\t<Field name=\"phoneNumber\" setPhone={setPhone} component={Input.Phone} />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Button type=\"button\" onClick={() => signInPhone(phone)} content=\"送出驗證碼\" />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Button type=\"button\" onClick={() => unlinkPhoneProvider()} negative content=\"移除手機連結\" />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<div id=\"recaptcha-container\" />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t{confirmResult && (\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>驗證碼</label>\n\t\t\t\t\t\t<Form.Input onChange={e => setVerifyCode(e.target.value)} name=\"verifyCode\" value={verifyCode} />\n\t\t\t\t\t\t<Button type=\"button\" onClick={() => confirmCode()} content=\"驗證手機\" />\n\t\t\t\t\t\t<Message hidden={message === ''} content={message} />\n\t\t\t\t\t</Form.Field>\n\t\t\t\t)}\n\n\t\t\t\t<Button type=\"submit\" fluid content=\"修改\" />\n\t\t\t</Formik>\n\t\t</Form>\n\t)\n}\n\nUserProfile.defaultValues = {\n\tisVerify: false\n}\n\nconst enhancer = compose(\n\twithFirebase,\n\twithFirestore,\n\twithState('message', 'setMessage', ''),\n\twithState('confirmResult', 'setConfirmResult', null),\n\twithState('verifyCode', 'setVerifyCode', ''),\n\twithHandlers({\n\t\tsignInPhone: ({ firebase, setMessage, setConfirmResult }) => phone => {\n\t\t\tconsole.log(phone)\n\t\t\tconst appVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container')\n\t\t\tfirebase.auth().useDeviceLanguage()\n\t\t\tfirebase\n\t\t\t\t.auth()\n\t\t\t\t.signInWithPhoneNumber(phone, appVerifier)\n\t\t\t\t.then(confirmResult => {\n\t\t\t\t\tconsole.log(confirmResult)\n\t\t\t\t\tsetConfirmResult(confirmResult)\n\t\t\t\t})\n\t\t\t\t.then(() => setMessage('成功送出驗證'))\n\t\t\t\t.catch(error => setMessage(`登入手機號碼出現錯誤: ${error.message}`))\n\t\t},\n\t\tconfirmCode: ({ confirmResult, verifyCode, setMessage, setConfirmResult, firebase }) => e => {\n\t\t\tif (confirmResult && verifyCode.length) {\n\t\t\t\tconst credential = firebase.auth.PhoneAuthProvider.credential(confirmResult.verificationId, verifyCode)\n\t\t\t\tfirebase\n\t\t\t\t\t.auth()\n\t\t\t\t\t.currentUser.linkAndRetrieveDataWithCredential(credential)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsetMessage('驗證成功')\n\t\t\t\t\t\tsetConfirmResult('')\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => setMessage(`驗證錯誤: ${error.message}`))\n\t\t\t}\n\t\t},\n\t\tunlinkPhoneProvider: ({ firebase }) => () => {\n\t\t\tfirebase.auth().currentUser.unlink(firebase.auth.PhoneAuthProvider.PROVIDER_ID)\n\t\t}\n\t}),\n\twithFormik({\n\t\tmapPropsToValues: props => {\n\t\t\treturn { ...props.initialValue }\n\t\t},\n\t\t// Custom sync validation\n\n\t\tvalidationSchema: () =>\n\t\t\tyup.object().shape({\n\t\t\t\temail: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.email('不符合信箱格式')\n\t\t\t\t\t.required('必填'),\n\t\t\t\tdisplayName: yup.string().required('必填'),\n\t\t\t\tphoneNumber: yup.string()\n\t\t\t}),\n\t\thandleSubmit: (values, { setSubmitting }) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\talert(JSON.stringify(values, null, 2))\n\t\t\t\tsetSubmitting(false)\n\t\t\t}, 1000)\n\t\t},\n\t\tenableReinitialize: true,\n\t\tdisplayName: 'UserProfile'\n\t})\n)\n\nexport default enhancer(UserProfile)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { compose, withHandlers } from 'recompose'\n\nimport { Container, Segment } from 'semantic-ui-react'\n\nimport { withFirebase, withFirestore } from 'react-redux-firebase'\n\nimport { toast } from 'react-toastify'\n\nimport UserProfile from 'components/user/Profile'\n\nconst PageUserProfile = props => {\n\tconst { displayName, email, phoneNumber, emailVerified } = props.auth\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdocument.title = '使用者資料'\n\t\t}\n\t}, [])\n\n\tconst initialValue = {\n\t\temail,\n\t\tdisplayName,\n\t\tphoneNumber\n\t}\n\treturn (\n\t\t<Container style={{ marginTop: '20vh' }}>\n\t\t\t<Segment>\n\t\t\t\t<UserProfile initialValue={initialValue} isVerify={emailVerified} />\n\t\t\t</Segment>\n\t\t</Container>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.firebase.auth\n})\nconst enhancer = compose(\n\twithFirebase,\n\twithFirestore,\n\tconnect(mapStateToProps),\n\twithHandlers({\n\t\tupdateProfile: ({ firestore, auth }) => values => {\n\t\t\tfirestore.update(`user/${auth.uid}`, values).then(() => toast.success('成功'))\n\t\t}\n\t})\n)\n\nexport default enhancer(PageUserProfile)\n","import React from 'react'\nimport { Button, Form, Header, Divider } from 'semantic-ui-react'\nimport { Form as Formik, Field, withFormik, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\n\nimport { Field as Input } from '../field'\n\nconst AuthLogin = props => {\n\treturn (\n\t\t<Form>\n\t\t\t<Header as=\"h1\" content=\"登入表單\" />\n\t\t\t<Divider />\n\t\t\t<Formik>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>帳號/信箱：</label>\n\t\t\t\t\t<Field name=\"email\" type=\"email\" placeholder=\"帳號(信箱)\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"email\" />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>密碼：</label>\n\t\t\t\t\t<Field name=\"password\" type=\"password\" placeholder=\"密碼\" component={Input.Text} />\n\t\t\t\t\t<ErrorMessage name=\"password\" />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Button type=\"submit\" fluid content=\"登入\" />\n\t\t\t</Formik>\n\t\t</Form>\n\t)\n}\n\nconst enhancer = withFormik({\n\tmapPropsToValues: () => ({ email: '', password: '' }),\n\n\t// Custom sync validation\n\n\tvalidationSchema: () =>\n\t\tyup.object().shape({\n\t\t\temail: yup\n\t\t\t\t.string()\n\t\t\t\t.email('不符合信箱格式')\n\t\t\t\t.required('必填'),\n\t\t\tpassword: yup\n\t\t\t\t.string()\n\t\t\t\t.required('必填')\n\t\t\t\t.min(6, '不可小於6個字')\n\t\t}),\n\thandleSubmit: (values, { setSubmitting, resetForm, props: { emailLogin } }) => {\n\t\tsetTimeout(() => {\n\t\t\t// alert(JSON.stringify(values, null, 2))\n\t\t\temailLogin(values)\n\t\t\tsetSubmitting(false)\n\t\t\tresetForm()\n\t\t}, 1000)\n\t},\n\n\tdisplayName: 'AuthLogin'\n})\nexport default enhancer(AuthLogin)\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Segment, Divider, Button } from 'semantic-ui-react'\n\nimport SignLogin from 'components/sign/Login'\nimport { compose, withHandlers } from 'recompose'\nimport { withFirebase } from 'react-redux-firebase'\n\nconst PageSignIn = props => {\n\tconst { googloLogin, emailLogin } = props\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdocument.title = '登入'\n\t\t}\n\t}, [])\n\treturn (\n\t\t<Container style={{ marginTop: '20vh' }}>\n\t\t\t<Segment>\n\t\t\t\t<SignLogin emailLogin={emailLogin} />\n\t\t\t</Segment>\n\t\t\t<Divider horizontal>Or</Divider>\n\t\t\t<Segment basic textAlign=\"center\">\n\t\t\t\t<Button as={Link} to=\"auth/reset\" basic content=\"忘記密碼\" size=\"big\" />\n\t\t\t\t<Button size=\"big\" basic icon=\"google\" content=\"Google 註冊\" onClick={googloLogin} />\n\t\t\t</Segment>\n\t\t</Container>\n\t)\n}\n\nconst enhancer = compose(\n\twithFirebase,\n\twithHandlers({\n\t\tgoogloLogin: ({ firebase }) => values => {\n\t\t\tfirebase.login({\n\t\t\t\tprovider: 'google',\n\t\t\t\ttype: 'popup'\n\t\t\t})\n\t\t},\n\t\temailLogin: ({ firebase }) => values => {\n\t\t\tfirebase.login({\n\t\t\t\temail: values.email,\n\t\t\t\tpassword: values.password\n\t\t\t})\n\t\t}\n\t})\n)\n\nexport default enhancer(PageSignIn)\n","export const cities = [\n\t'台北市',\n\t'基隆市',\n\t'新北市',\n\t'宜蘭縣',\n\t'桃園市',\n\t'新竹市',\n\t'新竹縣',\n\t'苗栗縣',\n\t'台中市',\n\t'彰化縣',\n\t'南投縣',\n\t'雲林縣',\n\t'嘉義縣',\n\t'嘉義市',\n\t'台南市',\n\t'高雄市',\n\t'屏東縣',\n\t'台東縣',\n\t'花蓮縣',\n\t'連江縣'\n]\nexport const towns = [\n\t{\n\t\tcity: '台北市',\n\t\ttowns: [\n\t\t\t'中正區',\n\t\t\t'大同區',\n\t\t\t'中山區',\n\t\t\t'松山區',\n\t\t\t'大安區',\n\t\t\t'萬華區',\n\t\t\t'信義區',\n\t\t\t'士林區',\n\t\t\t'北投區',\n\t\t\t'內湖區',\n\t\t\t'南港區',\n\t\t\t'文山區'\n\t\t]\n\t},\n\t{ city: '基隆市', towns: ['仁愛區', '信義區', '中正區', '中山區', '安樂區', '暖暖區', '七堵區'] },\n\t{\n\t\tcity: '新北市',\n\t\ttowns: [\n\t\t\t'萬里區',\n\t\t\t'金山區',\n\t\t\t'板橋區',\n\t\t\t'汐止區',\n\t\t\t'深坑區',\n\t\t\t'石碇區',\n\t\t\t'瑞芳區',\n\t\t\t'平溪區',\n\t\t\t'雙溪區',\n\t\t\t'貢寮區',\n\t\t\t'新店區',\n\t\t\t'坪林區',\n\t\t\t'烏來區',\n\t\t\t'永和區',\n\t\t\t'中和區',\n\t\t\t'土城區',\n\t\t\t'三峽區',\n\t\t\t'樹林區',\n\t\t\t'鶯歌區',\n\t\t\t'三重區',\n\t\t\t'新莊區',\n\t\t\t'泰山區',\n\t\t\t'林口區',\n\t\t\t'蘆洲區',\n\t\t\t'五股區',\n\t\t\t'八里區',\n\t\t\t'淡水區',\n\t\t\t'三芝區',\n\t\t\t'石門區'\n\t\t]\n\t},\n\t{\n\t\tcity: '宜蘭縣',\n\n\t\ttowns: [\n\t\t\t'宜蘭市',\n\t\t\t'頭城鎮',\n\t\t\t'礁溪鄉',\n\t\t\t'壯圍鄉',\n\t\t\t'員山鄉',\n\t\t\t'羅東鎮',\n\t\t\t'三星鄉',\n\t\t\t'大同鄉',\n\t\t\t'五結鄉',\n\t\t\t'冬山鄉',\n\t\t\t'蘇澳鎮',\n\t\t\t'南澳鄉',\n\t\t\t'釣魚台列嶼'\n\t\t]\n\t},\n\t{\n\t\tcity: '桃園市',\n\t\ttowns: [\n\t\t\t'中壢區',\n\t\t\t'平鎮區',\n\t\t\t'龍潭區',\n\t\t\t'楊梅區',\n\t\t\t'新屋區',\n\t\t\t'觀音區',\n\t\t\t'桃園區',\n\t\t\t'龜山區',\n\t\t\t'八德區',\n\t\t\t'大溪區',\n\t\t\t'復興區',\n\t\t\t'大園區',\n\t\t\t'蘆竹區'\n\t\t]\n\t},\n\t{\n\t\tcity: '新竹市',\n\t\ttowns: ['東區', '北區', '香山區']\n\t},\n\t{\n\t\tcity: '新竹縣',\n\t\ttowns: [\n\t\t\t'竹北市',\n\t\t\t'湖口鄉',\n\t\t\t'新豐鄉',\n\t\t\t'新埔鎮',\n\t\t\t'關西鎮',\n\t\t\t'芎林鄉',\n\t\t\t'寶山鄉',\n\t\t\t'竹東鎮',\n\t\t\t'五峰鄉',\n\t\t\t'橫山鄉',\n\t\t\t'尖石鄉',\n\t\t\t'北埔鄉',\n\t\t\t'峨眉鄉'\n\t\t]\n\t},\n\t{\n\t\tcity: '苗栗縣',\n\t\ttowns: [\n\t\t\t'竹南鎮',\n\t\t\t'頭份市',\n\t\t\t'三灣鄉',\n\t\t\t'南庄鄉',\n\t\t\t'獅潭鄉',\n\t\t\t'後龍鎮',\n\t\t\t'通霄鎮',\n\t\t\t'苑裡鎮',\n\t\t\t'苗栗市',\n\t\t\t'造橋鄉',\n\t\t\t'頭屋鄉',\n\t\t\t'公館鄉',\n\t\t\t'大湖鄉',\n\t\t\t'泰安鄉',\n\t\t\t'銅鑼鄉',\n\t\t\t'三義鄉',\n\t\t\t'西湖鄉',\n\t\t\t'卓蘭鎮'\n\t\t]\n\t},\n\t{\n\t\tcity: '台中市',\n\t\ttowns: [\n\t\t\t'中區',\n\t\t\t'東區',\n\t\t\t'南區',\n\t\t\t'西區',\n\t\t\t'北區',\n\t\t\t'北屯區',\n\t\t\t'西屯區',\n\t\t\t'南屯區',\n\t\t\t'太平區',\n\t\t\t'大里區',\n\t\t\t'霧峰區',\n\t\t\t'烏日區',\n\t\t\t'豐原區',\n\t\t\t'后里區',\n\t\t\t'石岡區',\n\t\t\t'東勢區',\n\t\t\t'和平區',\n\t\t\t'新社區',\n\t\t\t'潭子區',\n\t\t\t'大雅區',\n\t\t\t'神岡區',\n\t\t\t'大肚區',\n\t\t\t'沙鹿區',\n\t\t\t'龍井區',\n\t\t\t'梧棲區',\n\t\t\t'清水區',\n\t\t\t'大甲區',\n\t\t\t'外埔區',\n\t\t\t'大安區'\n\t\t]\n\t},\n\t{\n\t\tcity: '彰化縣',\n\t\ttowns: [\n\t\t\t'彰化市',\n\t\t\t'芬園鄉',\n\t\t\t'花壇鄉',\n\t\t\t'秀水鄉',\n\t\t\t'鹿港鎮',\n\t\t\t'福興鄉',\n\t\t\t'線西鄉',\n\t\t\t'和美鎮',\n\t\t\t'伸港鄉',\n\t\t\t'員林市',\n\t\t\t'社頭鄉',\n\t\t\t'永靖鄉',\n\t\t\t'埔心鄉',\n\t\t\t'溪湖鎮',\n\t\t\t'大村鄉',\n\t\t\t'埔鹽鄉',\n\t\t\t'田中鎮',\n\t\t\t'北斗鎮',\n\t\t\t'田尾鄉',\n\t\t\t'埤頭鄉',\n\t\t\t'溪州鄉',\n\t\t\t'竹塘鄉',\n\t\t\t'二林鎮',\n\t\t\t'大城鄉',\n\t\t\t'芳苑鄉',\n\t\t\t'二水鄉'\n\t\t]\n\t},\n\t{\n\t\tcity: '南投縣',\n\t\ttowns: [\n\t\t\t'南投市',\n\t\t\t'中寮鄉',\n\t\t\t'草屯鎮',\n\t\t\t'國姓鄉',\n\t\t\t'埔里鎮',\n\t\t\t'仁愛鄉',\n\t\t\t'名間鄉',\n\t\t\t'集集鎮',\n\t\t\t'水里鄉',\n\t\t\t'魚池鄉',\n\t\t\t'信義鄉',\n\t\t\t'竹山鎮',\n\t\t\t'鹿谷鄉 '\n\t\t]\n\t},\n\t{ city: '嘉義市', towns: ['東區', '西區'] }\n]\n","import React, { useState, useLayoutEffect } from 'react'\nimport { map } from 'lodash'\nimport { Item, Input, Select, Form, Segment } from 'semantic-ui-react'\nimport { cities, towns } from './data'\n\nconst cityOptions = map(cities, city => ({\n\tkey: city,\n\ttext: city,\n\tvalue: city\n}))\nconst StationList = props => {\n\tconst { station } = props\n\tconst [search, setSearch] = useState('')\n\tconst [city, setCity] = useState('')\n\tconst [townOptions, setTownOption] = useState([])\n\tconst [town, setTown] = useState('')\n\n\tuseLayoutEffect(() => {\n\t\tif (city) {\n\t\t\tlet options = []\n\t\t\tmap(towns, (town, i) => {\n\t\t\t\tif (town.city === city) {\n\t\t\t\t\toptions = map(town.towns, (t, i) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey: t,\n\t\t\t\t\t\t\ttext: t,\n\t\t\t\t\t\t\tvalue: t\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn setTownOption(options)\n\t\t}\n\t}, [city])\n\n\tconst filterList = () => {\n\t\tlet updatedList = station.filter(item => {\n\t\t\tif (town) {\n\t\t\t\treturn item.District.List[1].Value === town\n\t\t\t} else if (city) {\n\t\t\t\treturn item.City.List[1].Value === city\n\t\t\t} else {\n\t\t\t\treturn item.Address.List[1].Value.indexOf(search) !== -1\n\t\t\t}\n\t\t})\n\t\tlet data = updatedList.map((item, index, array) => {\n\t\t\treturn (\n\t\t\t\t<Item>\n\t\t\t\t\t<Item.Image size=\"tiny\" src=\"https://react.semantic-ui.com/images/wireframe/image.png\" />\n\t\t\t\t\t<Item.Content verticalAlign=\"middle\">\n\t\t\t\t\t\t<Item.Header as=\"a\" content={item.Address.List[1].Value} />\n\t\t\t\t\t</Item.Content>\n\t\t\t\t</Item>\n\t\t\t)\n\t\t})\n\t\treturn data\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Form>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>搜尋充電站</label>\n\t\t\t\t\t<Input value={search} onChange={e => setSearch(e.target.value)} />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>選擇縣市</label>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e, { name, value }) => {\n\t\t\t\t\t\t\treturn setCity(value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder=\"選擇縣市\"\n\t\t\t\t\t\toptions={cityOptions}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>選擇鄉鎮</label>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={town}\n\t\t\t\t\t\tonChange={(e, { name, value }) => {\n\t\t\t\t\t\t\treturn setTown(value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder=\"選擇鄉鎮\"\n\t\t\t\t\t\toptions={townOptions}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t</Form>\n\t\t\t<Segment>\n\t\t\t\t<Item.Group>{filterList()}</Item.Group>\n\t\t\t</Segment>\n\n\t\t\t{/* <pre>{JSON.stringify(station, null, )}</pre> */}\n\t\t</React.Fragment>\n\t)\n\n\n}\n\nexport { StationList }\n","import React, { useState } from 'react'\nimport { isEmpty } from 'lodash'\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs, InfoWindow } from 'react-google-maps'\n\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer'\n\nimport { compose, withProps } from 'recompose'\nimport { Header, Divider, List } from 'semantic-ui-react'\n\nconst GogoroStationMap = props => {\n\tconst { station } = props\n\tconst [isOpen, setOpen] = useState(false)\n\tconst [isInfo, setInfoID] = useState('')\n\n\n\tconst toggleInfo = (open, id) => {\n\t\tsetInfoID(id)\n\t\tsetOpen(open)\n\t}\n\tconst StationMark =\n\t\t!isEmpty(station) &&\n\t\tstation.map((s, i) => {\n\t\t\tconst StationInfo = isOpen && isInfo === i && (\n\t\t\t\t<InfoWindow position={{ lat: s.Latitude, lng: s.Longitude }}>\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Header content={s.LocName.List[1].Value} />\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<List.Item>{s.Address.List[1].Value}</List.Item>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t</InfoWindow>\n\t\t\t)\n\t\t\treturn (\n\t\t\t\t<Marker key={i} position={{ lat: s.Latitude, lng: s.Longitude }} onClick={() => toggleInfo(true, i)}>\n\t\t\t\t\t{StationInfo}\n\t\t\t\t</Marker>\n\t\t\t)\n\t\t})\n\tif (isEmpty(station)) {\n\t\treturn <div>沒東西</div>\n\t} else {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<pre>{JSON.stringify(station, null, 2)}</pre>\n\t\t\t\t<GoogleMap defaultZoom={7} defaultCenter={{ lat: 23.5, lng: 120 }}>\n\t\t\t\t\t<MarkerClusterer>{StationMark}</MarkerClusterer>\n\t\t\t\t</GoogleMap>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nconst enhancer = compose(\n\n\twithProps({\n\t\t/**\n\t\t * Note: create and replace your own key in the Google console.\n\t\t * https://console.developers.google.com/apis/dashboard\n\t\t * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n\t\t */\n\t\tgoogleMapURL:\n\t\t\t'https://maps.googleapis.com/maps/api/js?key=AIzaSyAkdvJpmaNSRVqu35dqpgqcEHVso3OilEc&v=3.exp&libraries=geometry,drawing,places',\n\t\tloadingElement: <div style={{ height: `100%` }} />,\n\t\tcontainerElement: <div style={{ height: `500px` }} />,\n\t\tmapElement: <div style={{ height: `100%` }} />\n\t}),\n\twithScriptjs,\n\twithGoogleMap\n)\n\nexport default enhancer(GogoroStationMap)\n","import React, { useState, useLayoutEffect }  from 'react'\n\nimport { isEmpty } from 'lodash'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { fetchGogoroAPI } from '../../store/fetchGogoroAPI'\n\nimport { Grid, Col, Row } from 'react-styled-flexboxgrid'\nimport { Segment } from 'semantic-ui-react'\n\nimport { StationList } from 'components/gogoro/List'\nimport GogoroStationMap from 'components/gogoro/Map'\n\nconst PageGogoro = props => {\n\tconst { isAuthEmpty, gogoro, fetchGogoroAPI } = props\n\n\tconst [station, setStation] = useState([])\n\tuseLayoutEffect(() => {\n\t\tif (isEmpty(gogoro)) {\n\t\t\tconsole.log(gogoro)\n\t\t\treturn fetchGogoroAPI()\n\t\t}\n\t\treturn setStation(gogoro)\n\t}, [gogoro])\n\n\tif (isAuthEmpty) {\n\t\treturn <Redirect to=\"/\" />\n\t} else {\n\t\treturn (\n\t\t\t<Grid fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={10} sm={6} md={4} lg={3}>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<StationList station={station} />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={2} sm={6} md={8} lg={9}>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<GogoroStationMap station={station} />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Grid>\n\t\t)\n\t}\n\n}\n\nPageGogoro.defaultProps = {\n\tgogoro: []\n}\n\nconst mapStateToProps = state => ({\n\tgogoro: state.gogoro,\n\tisAuthEmpty: state.firebase.auth.isEmpty\n})\nconst mapDispatchToProps = dispatch => ({\n\tfetchGogoroAPI: () => dispatch(fetchGogoroAPI())\n})\nconst enhancer = compose(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)\n)\nexport default enhancer(PageGogoro)\n","import React from 'react'\nimport { Switch, Route } from 'react-router'\n\nimport RouterAuth from './auth'\nimport PageUserProfile from 'router/user/Profile'\n\nimport PageSignIn from 'router/sign/Login'\n\nimport PageGogoro from 'router/gogoro/Map'\n\nconst RouterPages = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={PageSignIn} />\n\t\t\t<Route path=\"/user/profile\" component={PageUserProfile} />\n\t\t\t<Route path=\"/auth\" component={RouterAuth} />\n\t\t\t<Route path=\"/gogoro\" component={PageGogoro} />\n\t\t</Switch>\n\t)\n}\n\nexport default RouterPages\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Menu, Dropdown } from 'semantic-ui-react'\n\nimport { compose, withHandlers } from 'recompose'\nimport { withFirebase, isEmpty } from 'react-redux-firebase'\n\nconst MenuAuth = props => {\n\tconst {\n\t\tauth: { email },\n\t\tuserLoginout\n\t} = props\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Menu.Item>\n\t\t\t\t<Button primary as={Link} to=\"/gogoro\" content=\"Gogoro 充電站地圖\" size=\"big\">\n\n\t\t\t\t</Button>\n\t\t\t</Menu.Item>\n\t\t\t<Dropdown item text={email}>\n\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t<Dropdown.Item as={Link} to='/user/profile'>會員資料</Dropdown.Item>\n\t\t\t\t\t<Dropdown.Item onClick={userLoginout}>登出</Dropdown.Item>\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\t\t</React.Fragment>\n\t)\n}\nconst MenuDefault = props => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Menu.Item>\n\t\t\t\t<Button primary as={Link} to=\"/auth/register\" content=\"註冊\" size=\"big\">\n\t\t\t\t\t註冊\n\t\t\t\t</Button>\n\t\t\t</Menu.Item>\n\n\t\t\t<Menu.Item>\n\t\t\t\t<Button as={Link} to=\"/\" size=\"big\" content=\"登入\" />\n\t\t\t</Menu.Item>\n\t\t</React.Fragment>\n\t)\n}\nconst Nav = props => {\n\tconst { auth, userLoginout } = props\n\tconst isAuthed = isEmpty(auth) ? <MenuDefault /> : <MenuAuth auth={auth} userLoginout={userLoginout} />\n\n\treturn (\n\t\t<Menu size=\"huge\">\n\n\t\t\t<Menu.Menu position=\"right\">{isAuthed}</Menu.Menu>\n\t\t</Menu>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.firebase.auth\n})\n\nconst enhancer = compose(\n\twithFirebase,\n\twithHandlers({\n\t\tuserLoginout: ({ firebase }) => () => {\n\t\t\tfirebase.logout()\n\t\t}\n\t}),\n\tconnect(mapStateToProps)\n)\nexport default enhancer(Nav)\n","import React from 'react'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport RouterPage from 'routes/page'\nimport Nav from 'components/layout/Nav'\n\nconst App = () => (\n\t<React.Fragment>\n\t\t<Nav />\n\t\t<ToastContainer />\n\t\t<RouterPage />\n\t</React.Fragment>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { store, history, reduxfirebaseProps, persistor } from 'config/configureStore'\n\nimport App from './app'\n\nimport * as serviceWorker from './serviceWorker'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst render = Component => {\n\treturn ReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<ReactReduxFirebaseProvider {...reduxfirebaseProps}>\n\t\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t\t\t<Component />\n\t\t\t\t\t</ConnectedRouter>\n\t\t\t\t</PersistGate>\n\t\t\t</ReactReduxFirebaseProvider>\n\t\t</Provider>,\n\t\tdocument.getElementById('root')\n\t)\n}\n\nrender(App)\n\nif (module.hot) {\n\tmodule.hot.accept('./app', () => {\n\t\tconst NextApp = require('./app').default\n\t\trender(NextApp)\n\t})\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}